services:
  snippets:
    container_name: "${SNIPPET_APP_NAME}"
    image: ghcr.io/snippetservices-group4/snippets:latest
    environment:
      DB_USER: "${SNIPPET_DB_USER}"
      DB_PASSWORD: "${SNIPPET_DB_PASSWORD}"
      DB_NAME: "${SNIPPET_DB_NAME}"
      DB_HOST: "${SNIPPET_DB_HOST}"
      DB_PORT: "${SNIPPET_DB_PORT}"
      SPRING_PORT: "${SNIPPET_SPRING_PORT}"
      SPRING_APPLICATION_NAME: "${SNIPPET_APP_NAME}"
      PERMISSIONS_SERVICE_URL: "${PERMISSIONS_SERVICE_URL}"
      PARSER_SERVICE_URL: "${PARSER_SERVICE_URL}"
      ASSET_SERVICE_URL: "${ASSET_SERVICE_URL}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "printscript-service"
      NEW_RELIC_AGENT_ENABLED: "true"
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: "true"
    depends_on:
      - db-snippets

  db-snippets:
    container_name: "${SNIPPET_DB_HOST}"
    image: postgres:15
    environment:
      POSTGRES_DB: "${SNIPPET_DB_NAME}"
      POSTGRES_USER: "${SNIPPET_DB_USER}"
      POSTGRES_PASSWORD: "${SNIPPET_DB_PASSWORD}"
      DB_PORT: "${SNIPPET_DB_PORT}"
#    UN-comment the following line to expose the database port
#    ports:
#      - "${SNIPPET_DB_PORT}:5432"

  permissions:
    container_name: "${PERMISSION_APP_NAME}"
    image: ghcr.io/snippetservices-group4/permissions:latest
    environment:
      SPRING_APPLICATION_NAME: "${PERMISSION_APP_NAME}"
      DB_USER: "${PERMISSION_DB_USER}"
      DB_PASSWORD: "${PERMISSION_DB_PASSWORD}"
      DB_HOST: "${PERMISSION_DB_HOST}"
      DB_NAME: "${PERMISSION_DB_NAME}"
      DB_PORT: "${PERMISSION_DB_PORT}"
      SPRING_PORT: "${PERMISSION_SPRING_PORT}"
      PARSER_SERVICE_URL: "${PARSER_SERVICE_URL}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "permissions-service"
      NEW_RELIC_AGENT_ENABLED: "true"
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: "true"
    depends_on:
      - db-permissions
      - redis

  db-permissions:
    container_name: "${PERMISSION_DB_HOST}"
    image: postgres:15
    environment:
      POSTGRES_DB: "${PERMISSION_DB_NAME}"
      POSTGRES_USER: "${PERMISSION_DB_USER}"
      POSTGRES_PASSWORD: "${PERMISSION_DB_PASSWORD}"
#    UN-comment the following line to expose the database port
#    ports:
#      - "${PERMISSION_DB_PORT}:5432"

  redis:
    container_name: "${REDIS_HOST}"
    image: redis:6-alpine
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  parser:
    container_name: "${PARSER_APP_NAME}"
    image: ghcr.io/snippetservices-group4/parsers:latest
    environment:
      SPRING_APPLICATION_NAME: "${PARSER_APP_NAME}"
      SPRING_PORT: "${PARSER_SPRING_PORT}"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "parser-service"
      NEW_RELIC_AGENT_ENABLED: "true"
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: "true"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    depends_on:
      - db-snippets
      - db-permissions
      - redis

  nginx:
    container_name: nginx
    restart: unless-stopped
    image:
      nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/${CLOUD_ENVIRONMENT}-nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/certs:/etc/nginx/certs:ro
    environment:
      - CLOUD_ENVIRONMENT=${CLOUD_ENVIRONMENT}
    depends_on:
      - react-app
      - snippets
      - permissions
      - parser
      - auth-middleware

  auth-middleware:
    image: ghcr.io/snippetservices-group4/auth-middleware:latest
    container_name: auth-middleware
    environment:
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_SECRET_KEY: ${AUTH0_SECRET_KEY}
    depends_on:
      - snippets
      - permissions
      - parser

  react-app:
    image: ghcr.io/snippetservices-group4/react-app:latest
    container_name: react-app

  # snippet-asset-service
  asset-api:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: "false"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite-snippets"
    hostname: azurite-snippets
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

volumes:
  react-app:
  db_data:
  blob:
    external: false
