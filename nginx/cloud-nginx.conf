events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    server_tokens off;
    charset utf-8;

    lua_shared_dict jwt_cache 10m;  # Shared memory for caching token keys

    server {
        listen 80;
        server_name snippetservicesgr4.duckdns.org;

        # Redirect to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name snippetservicesgr4.duckdns.org;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Apply Lua-based JWT validation only to backend service paths
        location ~ ^/(parser|snippet|permission)/ {
            lua_need_request_body on;

            # Call the Lua script for JWT decoding and validation
            access_by_lua_file /etc/nginx/lua/jwt_validation.lua;

            # Remove service prefix before proxying the request
            rewrite ^/(parser|snippet|permission)(/.*)$ $2 break;
            proxy_pass http://infra-$1-service:8080; # Forward to the corresponding service
        }

        # Serve UI without JWT validation
        location / {
            proxy_pass http://react-app:80;
        }
    }
}
